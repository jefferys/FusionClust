% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fusionClust.R
\name{readAbraSv}
\alias{readAbraSv}
\title{Read an abra.sv file}
\usage{
readAbraSv(file, stranded = FALSE, orderedEnds = TRUE, tumorOnly = FALSE)
}
\arguments{
\item{file}{The abra.sv fusion data file to load. Can be a single abra sv
file, or a merged file with results for multuple samples.}

\item{stranded}{Boolean indicating if the abra file has strand information.
Currently, setting this TRUE will prevent processing as stradedness is not
implemented. Default is FALSE.}

\item{orderedEnds}{Boolean indicating if the output should order the two
fusions ends canonically (ref, then pos), so the earlier one is first.
Default is TRUE.}

\item{tumorOnly}{Boolean indicating if the abra file has one column, e.g.
tumor only or two columns of data, e.g. tumor and normal. Default is FALSE.}
}
\value{
Returns a data frame describing the fusions, with columns:
\itemize{
  \item{ \bold{sample} [optional] The sample this fusion came from.}
  \item{ \bold{group} The group name (within sample) of equivalent fusions.}
  \item{ \bold{chr1} End1's chromosome, parsed from <chr>:<pos>.}
  \item{ \bold{pos1} End1's position, parsed from <chr>:<pos>.}
  \item{ \bold{chr1} End2's chromosome, parsed from <chr>:<pos>.}
  \item{ \bold{pos1} End2's position, parsed from <chr>:<pos>.}
  \item{ \bold{orientation} The relative directionality of end1 and end2, as
blank " " if in the same direction (FF or RR from input), or as "I" if
relatively inverted (FR or RF fromn input).}
  \item{ \bold{normal_count} The number of split reads containing the fusion
point in the normal sample.}
  \item{ \bold{tumor_count} The number of split reads containing the fusion
point in the tumor sample.}
 }
}
\description{
Read in a sample's abra.sv.txt file, or a merged (concatenated)
abra.sv.txt file with an extra (initial) column giving the sample name.
}
\examples{
svFile <- "tests/testthat/data/perSampleAbraSv.tsv"
svFile <- system.file( svFile, package= "fusionClust" )
fusions <- loadAbraSv( svFile )
}
